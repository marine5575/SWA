/*
나의 예전 코드.
최적화가 안 되어 있어서 생각보다 시간이 오래 걸린다.
일단 나눗셈 연산이 매우 많으며, 비교 연산도 너무 많다. 
*/

//#include <cstdio>
//
//
//int main(void) {
//	int n;	// 구하려는 수의 범위 
//	scanf("%d", &n);
//	
//	for(int i = 1; i <= n; i++) {
//		// a는 백자리 숫자, b는 십자리 숫자, c는 일자리 숫자이다. flag는 a, b, c중 3, 6, 9가 포함되어 있는지 살펴보는 코드이다. 
//		int a = i / 100, b = (i - a * 100) / 10, c = i - a * 100 - b * 10, flag = 0;
//		
//		// 각각 3, 6, 9에 해당하는지 봄 
//		if(a == 3 || a == 6 || a == 9) printf("-"), flag = 1;
//		if(b == 3 || b == 6 || b == 9) printf("-"), flag = 1;
//		if(c == 3 || c == 6 || c == 9) printf("-"), flag = 1;
//		
//		// 해당 없으면 그냥 숫자 입력 
//		if(flag == 0) printf("%d ", i);
//		else printf(" ");
//	}
//	
//	return 0;
//}

/*
최적화를 한 코드.
비교 연산 횟수가 줄었으며 나눗셈 연산 횟수도 줄었다.
각 자리수에 해당하는 숫자가 어느 것인지 저장하는 배열이 추가 되었다. 
*/

#include <cstdio>

int main(void) {
	int n;	// 구하려는 수의 범위 
	scanf("%d", &n);
	
	for(int i = 1; i <= n; i++) {
		int a[10] = { 0 }, x = i;	// 자리수에 해당되는 숫자 저장, 자리수 구할 때 쓸 임시 저장고 
		
		// 모든 자리수를 다 살펴볼 때까지
		// 1의 자리수부터 살펴봄 
		while(x) {
			a[x % 10]++;	// 어느 숫자인가 
			x /= 10;	// 다음 자리수
		}
		
		// 3, 6, 9에 해당하는 숫자가 있었는가? 
		if(a[3] || a[6] || a[9]) {
			// 숫자만큼 출력 
			while(a[3]--) printf("-");
			while(a[6]--) printf("-");
			while(a[9]--) printf("-");
			printf(" ");
		}
		// 없었으면 그냥 출력 
		else printf("%d ", i);
	}
	
	return 0;
}
